# Script to ensure escalation.id is set to auto-increment (PostgreSQL SERIAL/IDENTITY)
from sqlalchemy import create_engine, text
import os
import configparser

# Get DB URL from env or alembic.ini
DATABASE_URL = os.environ.get('DATABASE_URL')
if not DATABASE_URL:
    config = configparser.ConfigParser()
    config.read(os.path.join(os.path.dirname(__file__), '../config/alembic.ini'))
    DATABASE_URL = config.get('alembic', 'sqlalchemy.url')

engine = create_engine(DATABASE_URL)

with engine.connect() as conn:
    # Check if escalation.id is already identity/serial
    result = conn.execute(text("""
        SELECT column_default FROM information_schema.columns
        WHERE table_name = 'escalations' AND column_name = 'id';
    """))
    default = result.scalar()
    if not default or 'nextval' not in str(default):
        # Alter column to add serial/identity (Postgres 10+)
        try:
            conn.execute(text("""
                ALTER TABLE escalations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY;
            """))
            print("Escalation.id set to auto-increment (identity)")
        except Exception as e:
            print(f"Error altering column: {e}")
    else:
        print("Escalation.id is already auto-incrementing.")
